@model IEnumerable<bookstore.ViewModels.Borrowers.BorrowerRowVM>

@{
    ViewData["Title"] = "All Borrowers";
}

<div class="container-fluid">
    <!-- Header Section -->
    <div class="row mb-4">
        <div class="col-12">
            <div class="d-flex justify-content-between align-items-center">
                <div>
                    <h2 class="fw-bold text-primary mb-0">
                        <i class="fas fa-users me-2"></i>Borrowers Management
                    </h2>
                    <p class="text-muted mb-0">Manage library members and their activities</p>
                </div>
                <a asp-action="NewBorrower" class="btn btn-primary btn-lg shadow-sm">
                    <i class="fas fa-user-plus me-2"></i>Add New Borrower
                </a>
            </div>
        </div>
    </div>

    <!-- Search Section -->
    <div class="row mb-4">
        <div class="col-12">
            <div class="card shadow-sm border-0">
                <div class="card-body">
                    <div class="row align-items-center">
                        <div class="col-md-8">
                            <div class="input-group">
                                <span class="input-group-text bg-light border-end-0">
                                    <i class="fas fa-search text-muted"></i>
                                </span>
                                <input type="text" id="borrowerSearch" class="form-control border-start-0 ps-0" 
                                       placeholder="Search borrowers by name..." />
                            </div>
                        </div>
                        <div class="col-md-4 text-md-end mt-2 mt-md-0">
                            <button id="clearSearch" class="btn btn-outline-secondary">
                                <i class="fas fa-times me-1"></i>Clear
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Borrowers Cards -->
    <div class="row" id="borrowersContainer">
        @foreach (var item in Model) {
            <div class="col-lg-6 col-xl-4 mb-4 borrower-item">
                <div class="card h-100 shadow-sm border-0 borrower-card">
                    <div class="card-header bg-gradient text-white d-flex align-items-center">
                        <div class="avatar-circle me-3">
                            <i class="fas fa-user"></i>
                        </div>
                        <div>
                            <h5 class="mb-0 fw-bold">@item.Name</h5>
                            <small class="opacity-75">Member ID: @item.Id</small>
                        </div>
                    </div>
                    <div class="card-body">
                        <div class="mb-3">
                            <h6 class="text-muted mb-2">
                                <i class="fas fa-book-open me-1"></i>Currently Borrowed Books
                            </h6>
                            @if (item.Books != null && item.Books.Any())
                            {
                                <div class="borrowed-books">
                                    @foreach (var book in item.Books.Take(3))
                                    {
                                        <span class="badge bg-light text-dark border me-1 mb-1">
                                            <i class="fas fa-book me-1"></i>@book.Title
                                        </span>
                                    }
                                    @if (item.Books.Count() > 3)
                                    {
                                        <span class="badge bg-secondary">+@(item.Books.Count() - 3) more</span>
                                    }
                                </div>
                            }
                            else
                            {
                                <p class="text-muted mb-0">
                                    <i class="fas fa-info-circle me-1"></i>No books currently borrowed
                                </p>
                            }
                        </div>
                        
                        <div class="d-flex justify-content-between align-items-center">
                            <div class="btn-group" role="group">
                                <a asp-action="BorrowerDetails" asp-route-id="@item.Id" 
                                   class="btn btn-outline-primary btn-sm">
                                    <i class="fas fa-eye me-1"></i>Details
                                </a>
                                <a asp-action="BorrowBookView" asp-route-id="@item.Id" 
                                   class="btn btn-outline-success btn-sm">
                                    <i class="fas fa-plus me-1"></i>Borrow
                                </a>
                                <a asp-action="ReturnBookView" asp-route-id="@item.Id" 
                                   class="btn btn-outline-warning btn-sm">
                                    <i class="fas fa-undo me-1"></i>Return
                                </a>
                            </div>
                            <span class="badge bg-primary rounded-pill">
                                @(item.Books?.Count() ?? 0) books
                            </span>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>

    <!-- No Results Message -->
    <div id="noResults" class="text-center py-5" style="display: none;">
        <div class="card border-0">
            <div class="card-body">
                <i class="fas fa-search text-muted mb-3" style="font-size: 4rem;"></i>
                <h4 class="text-muted">No borrowers found</h4>
                <p class="text-muted">Try adjusting your search criteria</p>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function() {
            let searchTimeout;
            const originalBorrowers = $('.borrower-item').clone();
            
            $('#borrowerSearch').on('input', function() {
                const searchTerm = $(this).val().trim();
                
                clearTimeout(searchTimeout);
                
                if (searchTerm.length === 0) {
                    showAllBorrowers();
                    return;
                }
                
                if (searchTerm.length < 2) {
                    return;
                }
                
                searchTimeout = setTimeout(function() {
                    searchBorrowers(searchTerm);
                }, 300);
            });
            
            $('#clearSearch').click(function() {
                $('#borrowerSearch').val('');
                showAllBorrowers();
            });
            
            function searchBorrowers(searchTerm) {
                $.get('@Url.Action("SearchBorrowersForList", "Borrower")', { term: searchTerm })
                    .done(function(response) {
                        if (response.success && response.data) {
                            displayBorrowers(response.data);
                        } else {
                            displayBorrowers([]);
                        }
                    })
                    .fail(function() {
                        console.error('Search failed');
                        displayBorrowers([]);
                    });
            }
            
            function displayBorrowers(borrowers) {
                const container = $('#borrowersContainer');
                container.empty();
                
                if (borrowers.length === 0) {
                    $('#noResults').show();
                    return;
                }
                
                $('#noResults').hide();
                
                borrowers.forEach(function(borrower) {
                    let booksHtml = '';
                    if (borrower.books && borrower.books.length > 0) {
                        borrower.books.slice(0, 3).forEach(function(book) {
                            booksHtml += `<span class="badge bg-light text-dark border me-1 mb-1">
                                            <i class="fas fa-book me-1"></i>${book.title}
                                          </span>`;
                        });
                        if (borrower.books.length > 3) {
                            booksHtml += `<span class="badge bg-secondary">+${borrower.books.length - 3} more</span>`;
                        }
                    } else {
                        booksHtml = '<p class="text-muted mb-0"><i class="fas fa-info-circle me-1"></i>No books currently borrowed</p>';
                    }
                    
                    const borrowerCard = `
                        <div class="col-lg-6 col-xl-4 mb-4 borrower-item">
                            <div class="card h-100 shadow-sm border-0 borrower-card">
                                <div class="card-header bg-gradient text-white d-flex align-items-center">
                                    <div class="avatar-circle me-3">
                                        <i class="fas fa-user"></i>
                                    </div>
                                    <div>
                                        <h5 class="mb-0 fw-bold">${borrower.name}</h5>
                                        <small class="opacity-75">Member ID: ${borrower.id}</small>
                                    </div>
                                </div>
                                <div class="card-body">
                                    <div class="mb-3">
                                        <h6 class="text-muted mb-2">
                                            <i class="fas fa-book-open me-1"></i>Currently Borrowed Books
                                        </h6>
                                        <div class="borrowed-books">${booksHtml}</div>
                                    </div>
                                    
                                    <div class="d-flex justify-content-between align-items-center">
                                        <div class="btn-group" role="group">
                                            <a href="@Url.Action("BorrowerDetails", "Borrower")/${borrower.id}" 
                                               class="btn btn-outline-primary btn-sm">
                                                <i class="fas fa-eye me-1"></i>Details
                                            </a>
                                            <a href="@Url.Action("BorrowBookView", "Borrower")/${borrower.id}" 
                                               class="btn btn-outline-success btn-sm">
                                                <i class="fas fa-plus me-1"></i>Borrow
                                            </a>
                                            <a href="@Url.Action("ReturnBookView", "Borrower")/${borrower.id}" 
                                               class="btn btn-outline-warning btn-sm">
                                                <i class="fas fa-undo me-1"></i>Return
                                            </a>
                                        </div>
                                        <span class="badge bg-primary rounded-pill">
                                            ${borrower.books ? borrower.books.length : 0} books
                                        </span>
                                    </div>
                                </div>
                            </div>
                        </div>
                    `;
                    container.append(borrowerCard);
                });
            }
            
            function showAllBorrowers() {
                $('#borrowersContainer').empty().append(originalBorrowers.clone());
                $('#noResults').hide();
            }
        });
    </script>
}
